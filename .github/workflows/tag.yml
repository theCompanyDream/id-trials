name: Auto Tagger

on:
  push:
    branches:
      - main  # adjust as needed

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetch full history to get all tags

      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Auto tag if changes in /api or /apps/backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Fetching tags..."
          git fetch --tags

          # Get the most recent tag (assumes tags are in the form vX.Y.Z)
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Get the list of files changed since the latest tag
          CHANGED_FILES=$(git diff --name-only "${LATEST_TAG}" HEAD)
          echo "Changed files since ${LATEST_TAG}:"
          echo "$CHANGED_FILES"

          # Check if any changed file is in /api or /apps/backend
          if echo "$CHANGED_FILES" | grep -Eq '^(api/|apps/backend/)'; then
              echo "Changes detected in /api or /apps/backend. Proceeding with tagging."

              # Remove the leading 'v' and split version components
              VERSION=${LATEST_TAG#v}
              IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

              # Increment the patch version
              PATCH=$((PATCH + 1))
              NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
              echo "Creating new tag: $NEW_TAG"

              # Create and push the new tag
              git tag "$NEW_TAG"
              git push origin "$NEW_TAG"
          else
              echo "No changes in /api or /apps/backend. No tagging necessary."
          fi
